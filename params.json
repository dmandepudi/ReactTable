{"name":"ReactTable","tagline":"High Performance HTML Table with Row Grouping Functionality, Custom Cell Classes and More Implemented using Facebook react.js","body":"# ReactTable\r\n**New Project - Not All Features Functional**\r\n\r\nHTML Table with Group By functionality Implemented using Facebook [react.js](https://github.com/facebook/react)\r\n\r\n*requires [react.js](https://github.com/facebook/react)*\r\n\r\nCapabilities Include:\r\n\r\n- Add/Remove Columns\r\n- Sorting/Custom Sorting\r\n- Row Grouping to Arbitrary Depth\r\n- Automatic Aggregation\r\n- Custom Cell Class Names\r\n- Custom Pagination\r\n\r\n## Install\r\n\r\nRun the following `bower` command, this will install [react.js](https://github.com/facebook/react) as a dependecy.\r\nNote that **jQuery** is not necessary to use this project\r\n\r\n    > bower install react-table\r\n\r\n## Usage\r\n\r\n    var options = { ... };\r\n    React.renderComponent(Table(options), document.getElementById(\"table\"));\r\n\r\n## Options\r\n\r\nOption Name        |Type              |Description\r\n-------------------|------------------|------------\r\ndata               |Array of Objects|the raw data array (Required)\r\ncolumnDefs         |Array of Objects|column definitions on how to construct the headers of the table\r\ngroupBy            |Array of Objects|columnDefs to dynamically group rows by\r\nafterColumnRemove  |Function        |callback function to invoke after a column has been removed by the user\r\nbeforeColumnAdd    |Function        |callback function to invoke when the \"+\" button is clicked on the header\r\nselectedRows       |Array of Strings|row keys of initially selected rows, must be used with the 'rowKey' option\r\nrowKey             |String          |specifies the property in the data array that should be used as the unique identifier of the given row for example: `{ssn: xxxx, first_name: \"Bob\"}; { rowKey: 'ssn'}`\r\n\r\n## Table Usage Example\r\n\r\n    var options = { data: data, columnDefs: [ {colTag: \"first_name\", text: \"First Name\"}, ... ], groupBy: [{colTag: \"birth_city\"}] };\r\n    React.renderComponent(React.createElement(ReactTable,options, document.getElementById(\"table\"));\r\n\r\n## Possible `columnDefs` Options\r\nThe following properties are valid on `columnDef` objects, which are nested under the `columnDefs` array passed to the main table options. These options control the appearance and behaviors of the associated columns.\r\n\r\nColumn Option Name|Description\r\n-------|------------------\r\ncolTag | column identifier\r\ntext   | display text in the table header\r\nformat | choose from 'number', 'currency', 'date' or 'string'\r\nsort   | custom callback function for sorting the column\r\ncellClassCallback | custom callback for applying custom CSS classes to cells. should should return a object with class names set to true in an object. for example `{ green: true, special: true}`\r\nformatInstructions | a string that represents how you want cells to be formatted, options are\r\n\r\n## Valid `formatInstructions` Options\r\n\r\n* multiplier - a number to multiply the cell content by\r\n* roundTo - the number of digits to round to\r\n* unit - text to attach to every cell in the column (such as m, KG, EUR)\r\n* alignment - choose from center, left and right\r\n\r\n#### Example\r\nPlease note you **cannot** have spaces in the format instruction values, since spaces are used as a separator\r\n\r\n    { ..., formatInstructions: \"multiplier:100 unit:KG\"}\r\n\r\n## Developing\r\n\r\n*You will need [node.js](http://nodejs.org/download/) installed on your development PC in order to use the tools below*\r\n\r\nYou will first need to download and install [react-tools](http://facebook.github.io/react/docs/tooling-integration.html) by running:\r\n\r\n    > npm install -g react-tools\r\n\r\nEach time you update source files, you should run the JSX compiler provided as part of react-tools via:\r\n\r\n    > jsx ./src ./build\r\n    // assuming your working directory is the project base directory\r\n\r\nAlternatively you can automatically perform this by using `jsx --watch` or setup a file watcher in Webstorm. If you are setting up a file watcher in Webstorm, it may be best to install `react-tools` locally instead of globally, simply remove `-g` from the above `npm` command\r\n\r\nTo compile the project run:\r\n\r\n    > grunt build\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}